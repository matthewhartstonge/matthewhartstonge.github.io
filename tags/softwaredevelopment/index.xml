<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SoftwareDevelopment on Matt Writes Things Sometimes</title><link>https://blog.mykro.co.nz/tags/softwaredevelopment/</link><description>Recent content in SoftwareDevelopment on Matt Writes Things Sometimes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; Copyright 2020 Matthew Hartstonge</copyright><lastBuildDate>Tue, 30 May 2023 16:00:00 +1200</lastBuildDate><atom:link href="https://blog.mykro.co.nz/tags/softwaredevelopment/index.xml" rel="self" type="application/rss+xml"/><item><title>Else Is Evil</title><link>https://blog.mykro.co.nz/posts/2023-05-30-else-is-evil/</link><pubDate>Tue, 30 May 2023 16:00:00 +1200</pubDate><guid>https://blog.mykro.co.nz/posts/2023-05-30-else-is-evil/</guid><description>Take the following Go code as an example:
package main type CodeType int const ( CodeA CodeType = iota + 10 CodeB ) func calculateCodes(codeType CodeType) int { var value int if codeType == CodeA { value = 10 } else { value = 20 } return value } func main() { fmt.Println(calculateCodes(CodeA)) } Why is else evil? There are a number of things that can cause an issue as code gets maintained over its lifecycle which can be dangerous:</description></item></channel></rss>