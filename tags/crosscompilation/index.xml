<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CrossCompilation on Matthew Hartstonge</title>
    <link>https://blog.mykro.co.nz/tags/crosscompilation/</link>
    <description>Recent content in CrossCompilation on Matthew Hartstonge</description>
    <image>
      <title>Matthew Hartstonge</title>
      <url>https://blog.mykro.co.nz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.mykro.co.nz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.133.0</generator>
    <language>en</language>
    <copyright>Copyright 2024 Matthew Hartstonge</copyright>
    <lastBuildDate>Fri, 23 Aug 2024 12:22:22 +1200</lastBuildDate>
    <atom:link href="https://blog.mykro.co.nz/tags/crosscompilation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why Use Go?</title>
      <link>https://blog.mykro.co.nz/posts/2024-08-23-why-use-go-cross-compilation/</link>
      <pubDate>Fri, 23 Aug 2024 12:22:22 +1200</pubDate>
      <guid>https://blog.mykro.co.nz/posts/2024-08-23-why-use-go-cross-compilation/</guid>
      <description>I&amp;rsquo;ve worked with Go(lang) professionally for over eight years. Now, while some might say I don&amp;rsquo;t have enough experience to be able to get an entry-level job (looking at you recruiters), others might say that I&amp;rsquo;m qualified enough to understand Go&amp;rsquo;s benefits and pitfalls.
Today, we look at how Go&amp;rsquo;s quick and easy cross-compilation can be a deciding factor when answering &amp;ldquo;Why Use Go?&amp;rdquo;.
The first use case that led me to migrate a project to Go was a requirement to work across multiple platforms to extract, transform and load data.</description>
    </item>
  </channel>
</rss>
