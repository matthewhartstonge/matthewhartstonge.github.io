<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>DevOps on Matthew Hartstonge</title><link>https://blog.mykro.co.nz/tags/devops/</link><description>Recent content in DevOps on Matthew Hartstonge</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; Copyright 2023 Matthew Hartstonge</copyright><lastBuildDate>Sat, 22 Jul 2023 17:45:00 +1200</lastBuildDate><atom:link href="https://blog.mykro.co.nz/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Devlog: 002 - Building Terraform Custom Types</title><link>https://blog.mykro.co.nz/posts/2023-07-22-devlog-002/</link><pubDate>Sat, 22 Jul 2023 17:45:00 +1200</pubDate><guid>https://blog.mykro.co.nz/posts/2023-07-22-devlog-002/</guid><description>Terraform Plugin Framework Custom Types One of the great new things the Terraform Plugin Framework provides is a stronger focus on strict typing and with that, the ability to develop custom types.
One of the first issues I discovered straight out of the gate when attempting to build a new Terraform Provider with the Plugin Framework was that the data I was modelling for a resource used UUIDs for its record ids.</description></item><item><title>Devlog: 001 - Building Terraform Providers</title><link>https://blog.mykro.co.nz/posts/2023-07-12-devlog-001/</link><pubDate>Wed, 12 Jul 2023 21:59:45 +1200</pubDate><guid>https://blog.mykro.co.nz/posts/2023-07-12-devlog-001/</guid><description>Terraform If you&amp;rsquo;ve been living under a rock or happen to be a newcomer in the DevOps/Site Reliability Engineering space, Hashicorp&amp;rsquo;s Terraform enables provisioning and managing cloud infrastructure. It&amp;rsquo;s essentially a glorified diffing tool for any cloud resource that, as long as a Terraform Provider exists, can ensure the state of your infrastructure is as expected when written in Hashicorp Config Language (HCL).
As a forewarning before digging deeper, it has been common to hear some Linuxy sysadmin-looking neckbeards in-passing talking about infrastructure as code, better known as IaC, being the bee&amp;rsquo;s knees and how they keep managing to give Dave a good ribbing after causing the Great Network failure of &amp;lsquo;22 after performing a Git force push&amp;hellip;</description></item><item><title>Nginx, Varnish and Wordpress with SSL Termination</title><link>https://blog.mykro.co.nz/posts/2020-07-06-nginx-varnish-wordpress-ssl-termination/</link><pubDate>Mon, 06 Jul 2020 22:13:09 +1200</pubDate><guid>https://blog.mykro.co.nz/posts/2020-07-06-nginx-varnish-wordpress-ssl-termination/</guid><description>TL;DR Assuming you&amp;rsquo;ve already got your reverse proxy running, in wp-config.php add the following:
&amp;lt;?php /** TLS/HTTPS fixes **/ // in some setups HTTP_X_FORWARDED_PROTO might contain a comma-separated list // e.g. http,https so check for https existence. if (strpos($_SERVER[&amp;#39;HTTP_X_FORWARDED_PROTO&amp;#39;], &amp;#39;https&amp;#39;) !== false) { // update HTTPS server variable to always &amp;#39;pretend&amp;#39; incoming requests were // performed via the HTTPS protocol. $_SERVER[&amp;#39;HTTPS&amp;#39;]=&amp;#39;on&amp;#39;; } If you&amp;rsquo;re getting desperate:
// If you ever get stuck, you can override the database set site URIs as well.</description></item><item><title>Superfast WordPress</title><link>https://blog.mykro.co.nz/posts/2020-03-29-optimizing-wordpress/</link><pubDate>Sun, 29 Mar 2020 19:00:00 +1300</pubDate><guid>https://blog.mykro.co.nz/posts/2020-03-29-optimizing-wordpress/</guid><description>Introduction WordPress is clearly one of the world&amp;rsquo;s most used Content Management Systems (CMS) commanding over 35% of the internet, and over 60% of the CMS market [1].
Working in Operations (ops), you see your fair share of friends, family and businesses that ask you to set up a WordPress site as their go to blogging platform. This really comes down to WordPress&amp;rsquo; ease of use, massive library of themes and it&amp;rsquo;s modular nature that enables the extension of it&amp;rsquo;s core via the use of plugins.</description></item></channel></rss>